/* eslint-disable react/prop-types */
/**
 * Generated by `./scripts/prebuild/generate-icons.ts`.
 * Run `yarn generate-icons` to regenerate.
 */
import React from 'react';
import { findClosestGlyphAvailable, Icon } from "../..";
export function IconDevice(props) {
  var _props$autoMirror;

  /* prettier-ignore */
  var iconList = [{
    'size': 16,
    'svgContent': '<path d=\'M8 13a1 1 0 100-2 1 1 0 000 2z\'/><path d=\'M4.75 0A1.75 1.75 0 003 1.75v12.5c0 .966.784 1.75 1.75 1.75h6.5A1.75 1.75 0 0013 14.25V1.75A1.75 1.75 0 0011.25 0h-6.5zM4.5 1.75a.25.25 0 01.25-.25h6.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25h-6.5a.25.25 0 01-.25-.25V1.75z\'/><text x="8" y="20" fill="white" textAnchor="middle" alignmentBaseline="middle" fontSize="3">{props.text}</text>'
  }, {
    'size': 24,
    'svgContent': `<svg
    viewBox="15.55 10.22 1174.89 624.25"
>
    <g>
        <path
            d="M847.616,14.189l-0,4.664c-0,1.287 -1.045,2.332 -2.332,2.332l-83.434,-0c-1.287,-0 -2.332,-1.045 -2.332,-2.332l-0,-4.664c-0,-1.287 1.045,-2.332 2.332,-2.332l83.434,-0c1.287,-0 2.332,1.045 2.332,2.332Z"
            stroke-width="${props.strokeWidth || 2}"
            fill="${props.highlighted?.includes('1') ? props.highlightColor : 'currentColor'}"
            stroke="${props.highlighted?.includes('1') ? props.highlightColor : 'currentColor'}"
        />
        <path
            d="M637.217,14.189l0,4.664c0,1.287 -1.045,2.332 -2.332,2.332l-83.434,-0c-1.287,-0 -2.332,-1.045 -2.332,-2.332l0,-4.664c0,-1.287 1.045,-2.332 2.332,-2.332l83.434,-0c1.287,-0 2.332,1.045 2.332,2.332Z"
            stroke-width="${props.strokeWidth || 2}"
            fill="${props.highlighted?.includes('2') ? props.highlightColor : 'currentColor'}"
            stroke="${props.highlighted?.includes('2') ? props.highlightColor : 'currentColor'}"
        />
        <path
            d="M429.928,14.189l-0,4.664c-0,1.287 -1.045,2.332 -2.332,2.332l-83.434,-0c-1.287,-0 -2.332,-1.045 -2.332,-2.332l-0,-4.664c-0,-1.287 1.045,-2.332 2.332,-2.332l83.434,-0c1.287,-0 2.332,1.045 2.332,2.332Z"
            stroke-width="${props.strokeWidth || 2}"
            fill="${props.highlighted?.includes('3') ? props.highlightColor : 'currentColor'}"
            stroke="${props.highlighted?.includes('3') ? props.highlightColor : 'currentColor'}"
        />
        <path
            d="M223.675,14.189l-0,4.664c-0,1.287 -1.045,2.332 -2.332,2.332l-83.434,-0c-1.287,-0 -2.332,-1.045 -2.332,-2.332l-0,-4.664c-0,-1.287 1.045,-2.332 2.332,-2.332l83.434,-0c1.287,-0 2.332,1.045 2.332,2.332Z"
            stroke-width="${props.strokeWidth || 2}"
            fill="${props.highlighted?.includes('4') ? props.highlightColor : 'currentColor'}"
            stroke="${props.highlighted?.includes('4') ? props.highlightColor : 'currentColor'}"
        />
        <path
            d="M1133.67,362.04l0,228.55c0,19.764 -16.045,35.81 -35.809,35.81l-1038.42,-0c-19.764,-0 -35.81,-16.046 -35.81,-35.81l0,-532.63c0,-19.764 16.046,-35.809 35.81,-35.809l1038.42,-0c19.764,-0 35.809,16.045 35.809,35.809l0,68.938c30.092,30.108 48.713,71.682 48.713,117.571c0,45.889 -18.621,87.463 -48.713,117.571Zm-12.437,-246.399l0,-57.681c0,-12.899 -10.473,-23.372 -23.372,-23.372l-1038.42,0c-12.9,0 -23.372,10.473 -23.372,23.372l-0,532.63c-0,12.9 10.472,23.372 23.372,23.372l1038.42,0c12.899,0 23.372,-10.472 23.372,-23.372l0,-217.294c-28.673,23.449 -65.306,37.523 -105.199,37.523c-41.381,-0 -79.254,-15.143 -108.373,-40.184l-0,175.773c-0,17.046 -13.84,30.886 -30.886,30.886l-776.705,-0c-17.047,-0 -30.886,-13.84 -30.886,-30.886l-0,-444.004c-0,-17.047 13.839,-30.886 30.886,-30.886l776.705,-0c17.046,-0 30.886,13.839 30.886,30.886l-0,15.899c29.119,-25.042 66.992,-40.184 108.373,-40.184c39.893,-0 76.526,14.073 105.199,37.522Zm-226.01,243.136c-28.222,-29.815 -45.539,-70.055 -45.539,-114.308c-0,-44.253 17.317,-84.494 45.539,-114.309l0,-27.756c0,-10.182 -8.266,-18.449 -18.448,-18.449l-776.705,0c-10.182,0 -18.449,8.267 -18.449,18.449l0,444.004c0,10.182 8.267,18.448 18.449,18.448l776.705,0c10.182,0 18.448,-8.266 18.448,-18.448l0,-187.631Zm120.811,-268.221c-84.947,0 -153.913,68.966 -153.913,153.913c0,84.946 68.966,153.912 153.913,153.912c84.946,0 153.912,-68.966 153.912,-153.912c0,-84.947 -68.966,-153.913 -153.912,-153.913Zm-0,362.757c29.745,-0 53.895,24.15 53.895,53.895c-0,29.746 -24.15,53.895 -53.895,53.895c-29.746,0 -53.896,-24.149 -53.896,-53.895c0,-29.745 24.15,-53.895 53.896,-53.895Zm-0,12.437c-22.882,0 -41.458,18.577 -41.458,41.458c-0,22.881 18.576,41.458 41.458,41.458c22.881,0 41.458,-18.577 41.458,-41.458c-0,-22.881 -18.577,-41.458 -41.458,-41.458Z"
            style="fill:currentColor;stroke:currentColor;stroke-linecap:butt;stroke-miterlimit:2;"
            stroke-width="${props.strokeWidth || 2}"
            fill="currentColor"

        />
        <text x="480" y="${props.fontSize * 0.2 + 350 || '350'}" fill="white" font-size="${props.fontSize || 100}" text-anchor="middle">${props.text || ''}</text>
    </g>
</svg>`
    }];
  var closestSize = findClosestGlyphAvailable(iconList, props.iconSize || 24);

  var titleTag = function titleTag(title, titleId) {
    return title ? "<title ".concat(titleId ? "id=\"".concat(titleId, "\"") : "", ">").concat(title, "</title>") : "";
  };

  var descTag = function descTag(desc, descId) {
    return desc ? "<desc ".concat(descId ? "id=\"".concat(descId, "\"") : "", ">").concat(desc, "</desc>") : "";
  };

  var autoMirror = (_props$autoMirror = props.autoMirror) !== null && _props$autoMirror !== void 0 ? _props$autoMirror : false;
  return /*#__PURE__*/React.createElement(Icon, Object.assign({}, props, {
    autoMirror: autoMirror,
    viewBox: "0 0 ".concat(closestSize.size, " ").concat(closestSize.size),
    dangerouslySetInnerHTML: {
      __html: "".concat(titleTag(props.title, props.titleId)).concat(descTag(props.desc, props.descId)).concat(closestSize.svgContent)
    }
  }));
}
/**
 * @deprecated The name Experimental__IconDeviceMobile is deprecated and will be archived soon. Use IconDeviceMobile instead.
 */

export function Experimental__IconDevice(props) {
  return /*#__PURE__*/React.createElement(IconDevice, props);
}