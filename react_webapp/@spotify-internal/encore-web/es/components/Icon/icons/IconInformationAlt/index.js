/**
 * Generated by `./scripts/prebuild/generate-icons.ts`.
 * Run `yarn generate-icons` to regenerate.
 */
import React from 'react';
import { findClosestGlyphAvailable, Icon } from "../../";
export function IconInformationAlt(props) {
  var _props$autoMirror;

  /* prettier-ignore */
  var iconList = [{
    'size': 16,
    'svgContent': '<path d=\'M8 14.5a6.5 6.5 0 110-13 6.5 6.5 0 010 13zM0 8a8 8 0 1016 0A8 8 0 000 8z\'/><path d=\'M7.25 7v5h1.5V7h-1.5zm0-3.026v1.5h1.5v-1.5h-1.5z\'/>'
  }, {
    'size': 24,
    'svgContent': '<path d=\'M11 6v2h2V6h-2zm0 4v8h2v-8h-2z\'/><path d=\'M12 21a9 9 0 110-18 9 9 0 010 18zM1 12c0 6.075 4.925 11 11 11s11-4.925 11-11S18.075 1 12 1 1 5.925 1 12z\'/>'
  }];
  var closestSize = findClosestGlyphAvailable(iconList, props.iconSize || 24);

  var titleTag = function titleTag(title, titleId) {
    return title ? "<title ".concat(titleId ? "id=\"".concat(titleId, "\"") : "", ">").concat(title, "</title>") : "";
  };

  var descTag = function descTag(desc, descId) {
    return desc ? "<desc ".concat(descId ? "id=\"".concat(descId, "\"") : "", ">").concat(desc, "</desc>") : "";
  };

  var autoMirror = (_props$autoMirror = props.autoMirror) !== null && _props$autoMirror !== void 0 ? _props$autoMirror : false;
  return /*#__PURE__*/React.createElement(Icon, Object.assign({}, props, {
    autoMirror: autoMirror,
    viewBox: "0 0 ".concat(closestSize.size, " ").concat(closestSize.size),
    dangerouslySetInnerHTML: {
      __html: "".concat(titleTag(props.title, props.titleId)).concat(descTag(props.desc, props.descId)).concat(closestSize.svgContent)
    }
  }));
}
/**
 * @deprecated The name Experimental__IconInformationAlt is deprecated and will be archived soon. Use IconInformationAlt instead.
 */

export function Experimental__IconInformationAlt(props) {
  return /*#__PURE__*/React.createElement(IconInformationAlt, props);
}