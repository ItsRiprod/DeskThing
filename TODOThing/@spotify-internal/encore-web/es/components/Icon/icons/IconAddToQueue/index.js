/**
 * Generated by `./scripts/prebuild/generate-icons.ts`.
 * Run `yarn generate-icons` to regenerate.
 */
import React from 'react';
import { findClosestGlyphAvailable, Icon } from "../../";
export function IconAddToQueue(props) {
  var _props$autoMirror;

  /* prettier-ignore */
  var iconList = [{
    'size': 16,
    'svgContent': '<path d=\'M16 15H2v-1.5h14V15zm0-4.5H2V9h14v1.5zm-8.034-6A5.484 5.484 0 017.187 6H13.5a2.5 2.5 0 000-5H7.966c.159.474.255.978.278 1.5H13.5a1 1 0 110 2H7.966zM2 2V0h1.5v2h2v1.5h-2v2H2v-2H0V2h2z\'/>'
  }, {
    'size': 24,
    'svgContent': '<path d=\'M10.93 5a7.062 7.062 0 000-2h7.62a3.5 3.5 0 110 7H7.608a7.037 7.037 0 002.137-2h8.805a1.5 1.5 0 000-3h-7.62zM3 16h18v-2H3v2zm0 6h18v-2H3v2zM5 3h3v2H5v3H3V5H0V3h3V0h2v3z\'/>'
  }];
  var closestSize = findClosestGlyphAvailable(iconList, props.iconSize || 24);

  var titleTag = function titleTag(title, titleId) {
    return title ? "<title ".concat(titleId ? "id=\"".concat(titleId, "\"") : "", ">").concat(title, "</title>") : "";
  };

  var descTag = function descTag(desc, descId) {
    return desc ? "<desc ".concat(descId ? "id=\"".concat(descId, "\"") : "", ">").concat(desc, "</desc>") : "";
  };

  var autoMirror = (_props$autoMirror = props.autoMirror) !== null && _props$autoMirror !== void 0 ? _props$autoMirror : false;
  return /*#__PURE__*/React.createElement(Icon, Object.assign({}, props, {
    autoMirror: autoMirror,
    viewBox: "0 0 ".concat(closestSize.size, " ").concat(closestSize.size),
    dangerouslySetInnerHTML: {
      __html: "".concat(titleTag(props.title, props.titleId)).concat(descTag(props.desc, props.descId)).concat(closestSize.svgContent)
    }
  }));
}
/**
 * @deprecated The name Experimental__IconAddToQueue is deprecated and will be archived soon. Use IconAddToQueue instead.
 */

export function Experimental__IconAddToQueue(props) {
  return /*#__PURE__*/React.createElement(IconAddToQueue, props);
}