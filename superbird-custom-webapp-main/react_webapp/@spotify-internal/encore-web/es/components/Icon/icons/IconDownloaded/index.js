/**
 * Generated by `./scripts/prebuild/generate-icons.ts`.
 * Run `yarn generate-icons` to regenerate.
 */
import React from 'react';
import { findClosestGlyphAvailable, Icon } from "../../";
export function IconDownloaded(props) {
  var _props$autoMirror;

  /* prettier-ignore */
  var iconList = [{
    'size': 16,
    'svgContent': '<path d=\'M0 8a8 8 0 1116 0A8 8 0 010 8zm8-4.75a.75.75 0 00-.75.75v5.94L6.055 8.744a.75.75 0 10-1.06 1.06L8 12.811l3.005-3.006a.75.75 0 10-1.06-1.06L8.75 9.939V4A.75.75 0 008 3.25z\'/>'
  }, {
    'size': 24,
    'svgContent': '<path d=\'M1 12C1 5.925 5.925 1 12 1s11 4.925 11 11-4.925 11-11 11S1 18.075 1 12zm12-4.95a1 1 0 00-2 0v7.486l-1.793-1.793a1 1 0 00-1.414 1.414L12 18.364l4.207-4.207a1 1 0 00-1.414-1.415L13 14.535V7.05z\'/>'
  }];
  var closestSize = findClosestGlyphAvailable(iconList, props.iconSize || 24);

  var titleTag = function titleTag(title, titleId) {
    return title ? "<title ".concat(titleId ? "id=\"".concat(titleId, "\"") : "", ">").concat(title, "</title>") : "";
  };

  var descTag = function descTag(desc, descId) {
    return desc ? "<desc ".concat(descId ? "id=\"".concat(descId, "\"") : "", ">").concat(desc, "</desc>") : "";
  };

  var autoMirror = (_props$autoMirror = props.autoMirror) !== null && _props$autoMirror !== void 0 ? _props$autoMirror : false;
  return /*#__PURE__*/React.createElement(Icon, Object.assign({}, props, {
    autoMirror: autoMirror,
    viewBox: "0 0 ".concat(closestSize.size, " ").concat(closestSize.size),
    dangerouslySetInnerHTML: {
      __html: "".concat(titleTag(props.title, props.titleId)).concat(descTag(props.desc, props.descId)).concat(closestSize.svgContent)
    }
  }));
}
/**
 * @deprecated The name Experimental__IconDownloaded is deprecated and will be archived soon. Use IconDownloaded instead.
 */

export function Experimental__IconDownloaded(props) {
  return /*#__PURE__*/React.createElement(IconDownloaded, props);
}